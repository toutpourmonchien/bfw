<?php

/**
 * Implements hook_menu().
 */
function vtc_devis_menu() {
  $items['devis'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vtc_devis_form'),
    'access arguments' => array('access content'),
  );

  return $items;
}

function vtc_devis_block_info() {
  $blocks = array();
  $blocks['vtc_devis_form'] = array(
    'info' => t('BFW devis calculate form'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function vtc_devis_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'vtc_devis_form':
      $block['subject'] = '';
      $block['content'] = drupal_get_form('vtc_devis_form');
      break;
  }
  return $block;
}

/**
 * Implements hook_form().
 */
function vtc_devis_form($form, &$form_state) {

  $form['pref']['#markup'] = '<div id="ajax-devis">';

  $form['firstname'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Prénom'),
    '#title_display' => 'invisible',
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Prénom'),
    ),
  );

  $form['lastname'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Nom'),
    '#title_display' => 'invisible',
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Nom'),
    ),
  );

  $form['phone'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Téléphone'),
    '#title_display' => 'invisible',
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Téléphone'),
    ),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Email'),
    '#title_display' => 'invisible',
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Email'),
    ),
  );

  $form['from'] = array(
    '#type' => 'textfield',
    '#title' => t('Adresse de départ'),
    '#title_display' => 'invisible',
    '#autocomplete_path' => 'actency-maps/autocomplete',
    '#attributes' => array(
      'placeholder' => t('Adresse de départ'),
    ),
    '#field_prefix' => '<div class="span6">',
    '#field_suffix' => '</div>',
    '#required' => true,
  );


  $form['to'] = array(
    '#type' => 'textfield',
    '#title' => t("Adresse d'arrivée"),
    '#title_display' => 'invisible',
    '#autocomplete_path' => 'actency-maps/autocomplete',
    '#attributes' => array(
      'placeholder' => t("Adresse d'arrivée"),
    ),
    '#field_prefix' => '<div class="span6">',
    '#field_suffix' => '</div>',
    '#required' => true,
  );

  $form['when'] = array(
    '#title' => t('Pour le'),
    '#type' => 'date_popup',
    '#date_label_position' => 'invisible',
    '#attributes' => array(
      'placeholder' => t('Date de la course'),
      'class' => array('start-date'),
    ),
    '#date_format' => 'd/m/Y',
    '#date_type' => DATE_DATETIME,
    '#default_value' => '',
    '#required' => true,
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
  );

  $form['time'] = array(
    '#title' => t('Heure'),
    '#type' => 'date_select',
    '#date_label_position' => 'invisible',
    '#attributes' => array(
      'placeholder' => t('Heure de la course'),
      'class' => array('start-date'),
    ),
    '#date_format' => 'g:i',
    '#date_increment' => 15,
    '#default_value' => '',
    '#required' => true,
    '#field_prefix' => '<div class="span6">',
    '#field_suffix' => '</div>',
  );

  $form['nb_personnes'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Nombre de voyageurs'),
    '#title_display' => 'invisible',
    '#attributes' => array(
      'placeholder' => t('Nombre de voyageurs'),
    ),
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
  );

  $form['nb_bagages'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#title' => t('Nombre de bagages'),
    '#title_display' => 'invisible',
    '#attributes' => array(
      'placeholder' => t('Nombre de bagages'),
    ),
    '#field_prefix' => '<div class="span3">',
    '#field_suffix' => '</div>',
  );

  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Votre message'),
    '#title_display' => 'invisible',
    '#attributes' => array(
      'placeholder' => t('Votre commentaire'),
    ),
    '#field_prefix' => '<div class="span12">',
    '#field_suffix' => '</div>',
  );

  $form['result'] = array(
    '#type' => 'container',
    '#prefix' => '<div id="calculate-wrapper">',
    '#suffix' => '</div>',
  );


  $form['calculer'] = array(
    '#type' => 'button',
    '#value' => t('Calculer le prix'),
    '#ajax' => array(
      'callback' => '_vtc_devis_calculate',
      'wrapper' => 'calculate-wrapper',
      'validate' => 'vtc_devis_form_validate',
    ),
    '#field_prefix' => '<div class="span6">',
    '#field_suffix' => '</div>',
  );

  $form['valider'] = array(
    '#type' => 'submit',
    '#value' => t('Valider ma demande'),
    '#ajax' => array(
      'callback' => 'vtc_devis_form_submit_callback',
      'wrapper' => 'ajax-devis',
      'validate' => 'vtc_devis_form_validate'
    ),
    '#field_prefix' => '<div class="span6">',
    '#field_suffix' => '</div>',
  );

  $form['suf']['#markup'] = '</div>';
  $form['#after_build'][] = '_vtc_devis_form_after_build';
  return $form;
}

function _vtc_devis_form_after_build(&$form, &$form_state) {
  $form['time']['hour']['#options'][''] = t('Heure');
  $form['time']['hour']['#suffix'] = '<div class="add-suf">'.t('h').'</div>';
  $form['time']['minute']['#options'][''] = t('Minute');
  $form['time']['minute']['#suffix'] = '<div class="add-suf">'.t('min').'</div>';
  return $form;
}

function _vtc_devis_calculate2(&$form, &$form_state) {

}
function _vtc_devis_calculate(&$form, &$form_state) {
  $errors = form_get_errors();
  if (empty($errors)) {
    _vtc_devis_calculate_price($form, $form_state);
    if (isset($form_state['distancematrix'])) {
      $data = $form_state['distancematrix'];
      $form['result']['markup'] = array(
        '#markup' => t('La distance entre @origin et @destination est de @num',
          array(
            '@origin' => $data->origin_addresses[0],
            '@destination' => $data->destination_addresses[0],
            '@num' => $data->rows[0]->elements[0]->distance->text,
          )),
      );
    }
    if (isset($form_state['price'])) {
      $form['result']['price'] = array(
        '#markup' => '<h2>' . t('Le prix de votre course est estimée à @price €',
            array(
              '@price' => $form_state['price'],
            )) . '</h2>',
      );

      $form['result']['price_hidden'] = array(
        '#type' => 'hidden',
        '#name' => 'price_hidden',
        '#value' => $form_state['price']
      );
      $_SESSION['price'] = $form_state['price'];
    }

  }
  $form_state['rebuild'] = TRUE;
  return $form['result'];
}


function vtc_devis_form_submit_callback(&$form, &$form_state) {
  $errors = form_get_errors();
  if (empty($errors)) {
    $values = $form_state['values'];
    if (!empty($_SESSION['price'])) {
      $values['price'] = $_SESSION['price'];
      $nid = _vtc_devis_save_reservation($values);
      if (!empty($nid)) {
        unset($form);
        $form['thanks'] = array(
          '#markup' => '<h1>' . t('Votre réservation a été enregistrée') . '</h1>',
        );
        unset($_SESSION['price']);
        return $form;
      }
    }
    else {
      form_set_error('price', t("Veuillez faire votre calcul de trajet avant validation"));
    }
  }
  return $form;
}

function _vtc_devis_calculate_price(&$form, &$form_state) {
  $values = $form_state['values'];
  unset($form_state['distancematrix']);
  if (!empty($values['from']) && !empty($values['to'])) {
    $data = vtc_gtools_get_km_beetween_two_places($values['from'], $values['to']);
    if ($data->status == 'OK') {
      $km = ($data->rows[0]->elements[0]->distance->value / 1000);
      $form_state['distancematrix'] = $data;
      $form_state['km'] = $km;
    }
  }
  if (!empty($values['time'])) {
    $times = explode(':', $values['time']);
    if (!empty($km)) {
      $forfait = variable_get('vtc_price_unit_price', 2);
      $unit_price = vtc_price_unit_price_by_hour($times[0]);
      $price = vtc_price_generate_price($forfait, $unit_price, $km);
      $price = round ( $price , 2 );
      $form_state['price'] = $price;
    }
  }
}

function vtc_devis_form_validate(&$form, &$form_state) {
  $mail = $form_state['values']['email'];
  if (!valid_email_address($mail)) {
    form_set_error('email', t('The email address appears to be invalid.'));
  }
}

function vtc_devis_form_validate_price(&$form, &$form_state) {
  if (empty($form_state['values']['price_hidden'])) {
    form_set_error('price', t("Vous n'avez pas encore calculé le prix de votre trajet"));
  }
}

function _vtc_devis_save_reservation($values) {
  $date = date('d/m/Y H:i');
  $node = new stdClass();
  $node->title = t("Reservation de @email le @date", array('@email' => $values['email'], '@date' => $date));
  $node->type = "reservation";
  node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
  $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
  $node->uid = 0;
  $node->status = 1; //(1 or 0): published or not
  $node->promote = 0; //(1 or 0): promoted to front page
  $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write
  //Add Data
  $node->field_reservation_firstname[$node->language][0]['value'] = $values['firstname'];
  $node->field_reservation_lastname[$node->language][0]['value'] = $values['lastname'];
  $node->field_reservation_phone_number[$node->language][0]['value'] = $values['phone'];
  $node->field_reservation_email[$node->language][0]['value'] = $values['email'];
  $node->field_reservation_start_address[$node->language][0]['value'] = $values['from'];
  $node->field_reservation_end_address[$node->language][0]['value'] = $values['to'];
  $when = date_create_from_format('Y-m-d H:i', $values['when'].' '.$values['time']);
  $node->field_reservation_date[$node->language][0]['value'] = date_format($when, 'U');
  $node->field_reservation_num_persons[$node->language][0]['value'] = $values['nb_personnes'];
  $node->field_reservation_num_suitcases[$node->language][0]['value'] = $values['nb_bagages'];
  $node->field_reservation_price[$node->language][0]['value'] = $values['price'];
  $node->body[$node->language][0]['value'] = $values['message'];
  node_save($node);
  return $node->nid;
}